generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider          = "mysql"
  url               = env("CLEARDB_AQUA_URL")
  shadowDatabaseUrl = env("CLEARDB_BRONZE_URL")
}

model Product {
  id           Int           @id @default(autoincrement())
  qruid        String        @unique
  passport     Passport?     @relation(fields: [passportId], references: [id])
  passportId   Int?
  status       StatusType    @default(ACTIVATED)
  deposit      Deposit?      @relation(fields: [depositId], references: [id])
  depositId    Int?
  interactions Interaction[]
}

model Interaction {
  id          Int             @id @default(autoincrement())
  type        InteractionType
  date        DateTime        @default(now())
  description String?
  role        Role?           @relation(fields: [roleId], references: [id])
  roleId      Int?
  product     Product?        @relation(fields: [productId], references: [id])
  productId   Int?
}

model Role {
  id           Int           @id @default(autoincrement())
  type         RoleType
  uid          String        @unique
  name         String
  description  String?
  interactions Interaction[]
  passports    Passport[]
}

model Deposit {
  id       Int       @id @default(autoincrement())
  gtin     String    @unique
  amount   Float
  products Product[]
}

model Passport {
  id         Int       @id @default(autoincrement())
  uid        String    @unique
  name       String
  definition String?   @db.VarChar(3000)
  brand      Role?     @relation(fields: [brandId], references: [id])
  brandId    Int?
  products   Product[]
}

enum InteractionType {
  ACTIVATION
  UPDATE
  SALE
  CLAIM
  RETURN
  RECYCLE
}

enum RoleType {
  CANDOUR
  FOUNDATION
  BRAND
  RETAILER
  RECYCLER
  CUSTOMER
}

enum StatusType {
  ACTIVATED
  SOLD
  RETURNED
  REPAIRED
  RESOLD
  RECYCLED
}
